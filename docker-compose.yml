services:
  postgres:
    image: postgres:15-alpine
    container_name: novitas-postgres
    environment:
      POSTGRES_DB: novitas
      POSTGRES_USER: novitas
      POSTGRES_PASSWORD: novitas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U novitas -d novitas"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: novitas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  novitas:
    build: .
    container_name: novitas-app
    environment:
      - NOVITAS_ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://novitas:novitas@postgres:5432/novitas
      - REDIS_URL=redis://redis:6379/0
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO=${GITHUB_REPO:-owner/novitas}
      - MAX_AGENTS_PER_CYCLE=${MAX_AGENTS_PER_CYCLE:-3}
      - AGENT_TIMEOUT_SECONDS=${AGENT_TIMEOUT_SECONDS:-300}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - DEBUG=${DEBUG:-true}
      - DAILY_IMPROVEMENT_ENABLED=${DAILY_IMPROVEMENT_ENABLED:-true}
      - IMPROVEMENT_BRANCH_PREFIX=${IMPROVEMENT_BRANCH_PREFIX:-daily-improvement}
      - DRY_RUN=${DRY_RUN:-true}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: ["uv", "run", "python", "-m", "novitas.main"]

volumes:
  postgres_data:
  redis_data:
